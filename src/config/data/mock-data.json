{
  "appSettingGetAllSvcResponse": [
    {
      "allowedValues": null,
      "category": "Function",
      "key": "GlobalFx",
      "regex": null,
      "required": true,
      "settingId": 1,
      "type": "text",
      "value": null
    },
    {
      "allowedValues": null,
      "category": "Function",
      "key": "GlobalGx",
      "regex": null,
      "required": true,
      "settingId": 2,
      "type": "text",
      "value": null
    },
    {
      "aMatrix": [],
      "allowedValues": null,
      "bMatrix": [],
      "category": "SysOfLinEquations",
      "key": "GlobalColRow",
      "regex": null,
      "required": true,
      "settingId": 3,
      "type": "text",
      "value": null
    }
  ],
  "getIncrSearchResultSvcResponse": {
    "aproxValue": {
      "x0": -2.5,
      "x1": -2.0
    },
    "isExact": false,
    "n": 17,
    "result": {
      "x": [ -10.0, -9.5, -9.0, -8.5, -8.0, -7.5,
        -7.0, -6.5, -6.0, -5.5, -5.0, -4.5,
        -4.0, -3.5, -3.0, -2.5, -2.0
      ],
      "fx": [ -94.4575469442882, -95.5091884910758, -79.62930457932521, -60.3168737778576, -56.60661710249522, -58.79983089446079,
        -48.83414785072682, -33.07724266523162, -28.038136666413987, -30.113217689818427, -24.798470412040484, -13.572884861840807,
        -8.62460904721802, -9.914401217524242, -7.7334099137812995, -1.383428083614687, 1.9203268407517977
      ]
    },
    "resultMessage": "There is a root in [-2.5, -2.0]",
    "root": null,
    "solutionFailed": false
  },
  "getBisecFalseRuleResultSvcResponse": {
    "aproxValue": {
      "xi": -0.68701171875,
      "xs": -0.686328125
    },
    "isExact": false,
    "n": 11,
    "result": {
      "error": [ null, 0.33333333333333326, 0.1428571428571429, 0.06666666666666676, 0.032258064516129004, 0.01587301587301578,
        0.00799999999999987, 0.003984063745019856, 0.0019880715705765085, 0.0009950248756217936, 0.0004977600796416451
      ],
      "fxm": [ 4.139746978709134, 1.8334727380994007, 0.809649883408472, 0.326031520566735, 0.09082553841488306, -0.025183405671759473,
        0.032689893143114546, 0.0037205744469002155, -0.010739567463284416, -0.0035115364034439267, 0.00010400880622718489
      ],
      "xi": [ -0.7, -0.7, -0.7, -0.7, -0.7, -0.7,
        -0.6890624999999999, -0.6890624999999999, -0.6890624999999999, -0.6876953124999999, -0.68701171875
      ],
      "xm": [ -0.35, -0.5249999999999999, -0.6124999999999999, -0.65625, -0.678125, -0.6890624999999999,
        -0.68359375, -0.686328125, -0.6876953124999999, -0.68701171875, -0.686669921875
      ],
      "xs": [ 0.0, -0.35, -0.5249999999999999, -0.6124999999999999, -0.65625, -0.678125,
        -0.678125, -0.68359375, -0.686328125, -0.686328125, -0.686328125
      ]
    },
    "resultMessage": "xm=-0.686669921875 is an approximation to a root with a tolerance=0.0006",
    "root": -0.686669921875,
    "solutionFailed": false
  },
  "getFixedPointResultSvcResponse": {
    "isExact": false,
    "n": 11,
    "result": {
      "error": [ null, 0.33333333333333326, 0.1428571428571429, 0.06666666666666676, 0.032258064516129004, 0.01587301587301578,
        0.00799999999999987, 0.003984063745019856, 0.0019880715705765085, 0.0009950248756217936, 0.0004977600796416451
      ],
      "fxn": [ 4.139746978709134, 1.8334727380994007, 0.809649883408472, 0.326031520566735, 0.09082553841488306, -0.025183405671759473,
        0.032689893143114546, 0.0037205744469002155, -0.010739567463284416, -0.0035115364034439267, 0.00010400880622718489
      ],
      "xn": [ -0.35, -0.5249999999999999, -0.6124999999999999, -0.65625, -0.678125, -0.6890624999999999,
        -0.68359375, -0.686328125, -0.6876953124999999, -0.68701171875, -0.686669921875
      ]
    },
    "resultMessage": "xn=-0.686669921875 is an approximation to a root with a tolerance=0.0006",
    "root": -0.686669921875,
    "solutionFailed": false
  },
  "getMultipleRootsResultSvcResponse": {
    "isExact": false,
    "n": 4,
    "result": {
        "d2fxn": [
            9.430515792466075,
            65.85875816787689,
            66.35265720629751,
            66.35239819211577
        ],
        "dfxn": [
            -40.078847775185054,
            -37.5092125566187,
            -37.469576903462496,
            -37.469597770085564
        ],
        "error": [
            null,
            0.06833964669909909,
            0.0005995797863791452,
            3.144812081856685e-07
        ],
        "fxn": [
            2.695627911177013,
            0.022466114595573572,
            -1.1783484374916497e-05,
            -3.277378368693462e-12
        ],
        "xn": [
            2.0,
            2.068339646699099,
            2.0689392264854782,
            2.06893891200427
        ]
    },
    "resultMessage": "xn=2.06893891200427 is an approximation to a root with a tolerance=5e-06",
    "root": 2.06893891200427,
    "solutionFailed": false
  },
  "getNewtonResultSvcResponse": {
    "isExact": false,
    "n": 11,
    "result": {
      "error": [ null, 0.33333333333333326, 0.1428571428571429, 0.06666666666666676, 0.032258064516129004, 0.01587301587301578,
        0.00799999999999987, 0.003984063745019856, 0.0019880715705765085, 0.0009950248756217936, 0.0004977600796416451
      ],
      "fxn": [ 4.139746978709134, 1.8334727380994007, 0.809649883408472, 0.326031520566735, 0.09082553841488306, -0.025183405671759473,
        0.032689893143114546, 0.0037205744469002155, -0.010739567463284416, -0.0035115364034439267, 0.00010400880622718489
      ],
      "dfxn": [ 4.139746978709134, 1.8334727380994007, 0.809649883408472, 0.326031520566735, 0.09082553841488306, -0.025183405671759473,
        0.032689893143114546, 0.0037205744469002155, -0.010739567463284416, -0.0035115364034439267, 0.00010400880622718489
      ],
      "xn": [ -0.7, -0.7, -0.7, -0.7, -0.7, -0.7,
        -0.6890624999999999, -0.6890624999999999, -0.6890624999999999, -0.6876953124999999, -0.68701171875
      ]
    },
    "resultMessage": "xm=-0.686669921875 is an approximation to a root with a tolerance=0.0006",
    "root": -0.686669921875,
    "solutionFailed": false
  },
  "getSecantResultSvcResponse": {
    "isExact": false,
    "n": 11,
    "result": {
      "error": [ null, null, 0.1428571428571429, 0.06666666666666676, 0.032258064516129004, 0.01587301587301578,
        0.00799999999999987, 0.003984063745019856, 0.0019880715705765085, 0.0009950248756217936, 0.0004977600796416451
      ],
      "fxn": [ 4.139746978709134, 1.8334727380994007, 0.809649883408472, 0.326031520566735, 0.09082553841488306, -0.025183405671759473,
        0.032689893143114546, 0.0037205744469002155, -0.010739567463284416, -0.0035115364034439267, 0.00010400880622718489
      ],
      "xn": [ -0.7, -0.7, -0.7, -0.7, -0.7, -0.7,
        -0.6890624999999999, -0.6890624999999999, -0.6890624999999999, -0.6876953124999999, -0.68701171875
      ],
      "den": [ -0.35, -0.5249999999999999, -0.6124999999999999, -0.65625, -0.678125, -0.6890624999999999,
        -0.68359375, -0.686328125, -0.6876953124999999, -0.68701171875, -0.686669921875
      ]
    },
    "resultMessage": "xm=-0.686669921875 is an approximation to a root with a tolerance=0.0006",
    "root": -0.686669921875,
    "solutionFailed": false
  },
  "getGaussEliminationResultSvcResponse": {
    "result": {
      "iterations": [
        {
          "aMatrix": [
            [34, -5, 6, 12],
            [-9, 43, 21, -8],
            [-12, 4, -75, 22],
            [7, 5, -13, 65]
          ],
          "bMatrix": [37, 123, 16, 9]
        },
        {
          "aMatrix": [
            [34, -5, 6, 12],
            [0, 41.67647059, 22.58823529, -4.823529412],
            [0, 2.235294118, -72.88235294, 26.23529412],
            [0, 6.029411765, -14.23529412, 62.52941176]
          ],
          "bMatrix": [37, 132.7941176, 29.05882353, 1.382352941]
        },
        {
          "aMatrix": [
            [34, -5, 6, 12],
            [0, 41.67647059, 22.58823529, -4.823529412],
            [0, 0, -74.09386027, 26.49400141],
            [0, 0, -17.50317572, 63.22724065]
          ],
          "bMatrix": [37, 132.7941176, 21.93648553, -17.82921665]
        }
      ],
      "aMatrix": [
        [34, -5, 6, 12],
        [0, 41.67647059, 22.58823529, -4.823529412],
        [0, 0, -74.09386027, 26.49400141],
        [0, 0, 0, 56.96856873]
      ],
      "bMatrix": [37, 132.7941176, 21.93648553, -23.01126763],
      "xMatrix": [1.805342986, 3.378304841, -0.4404978477, -0.4039291866]
    },
    "resultMessage": "The method was successfully executed! See the solution down below.",
    "hasInfiniteSolutions": false,
    "solutionFailed": false
  },
  "getFactorizationLUResultSvcResponse": {
    "result": {
      "iterations": [
        {
          "lMatrix": [
            [1, 0, 0, 0],
            ["L1", 1, 0, 0],
            ["L2", "L3", 1, 0],
            ["L4", "L5", "L6", 1]
          ],
          "uMatrix": [
            ["U1", "U2", "U3", "U4"],
            [0, "U5", "U6", "U7"],
            [0, 0, "U8", "U9"],
            [0, 0, 0, "U10"]
          ],
          "aMatrix": [
            [40, -5, 6, 12],
            [-9, 43, 21, -8],
            [-12, 4, -75, 22],
            [7, 5, -13, 65]
          ],
          "bMatrix": [37, 123, 16, 9]
        },
        {
          "lMatrix": [
            [1, 0, 0, 0],
            [21, 1, 0, 0],
            [12, "L3", 1, 0],
            [42, "L5", "L6", 1]
          ],
          "uMatrix": [
            [21, 4, 5, 7],
            [0, "U5", "U6", "U7"],
            [0, 0, "U8", "U9"],
            [0, 0, 0, "U10"]
          ],
          "aMatrix": [
            [40, -5, 6, 12],
            [-9, 43, 21, -8],
            [-12, 4, -75, 22],
            [7, 5, -13, 65]
          ],
          "bMatrix": [37, 132.7941176, 29.05882353, 1.382352941]
        },
        {
          "lMatrix": [
            [1, 0, 0, 0],
            [21, 1, 0, 0],
            [12, 51, 1, 0],
            [42, 12, "L6", 1]
          ],
          "uMatrix": [
            [21, 4, 5, 7],
            [0, 15, 9, 8],
            [0, 0, "U8", "U9"],
            [0, 0, 0, "U10"]
          ],
          "aMatrix": [
            [40, -5, 6, 12],
            [-9, 43, 21, -8],
            [-12, 4, -75, 22],
            [7, 5, -13, 65]
          ],
          "bMatrix": [37, 132.7941176, 21.93648553, -17.82921665]
        }
      ],
      "lMatrix": [
        [1, 0, 0, 0],
        [21, 1, 0, 0],
        [12, 51, 1, 0],
        [42, 12, 12, 1]
      ],
      "uMatrix": [
        [21, 4, 5, 7],
        [0, 15, 9, 8],
        [0, 0, 55, 12],
        [0, 0, 0, 54]
      ],
      "aMatrix": [
        [40, -5, 6, 12],
        [-9, 43, 21, -8],
        [-12, 4, -75, 22],
        [7, 5, -13, 65]
      ],
      "bMatrix": [37, 132.7941176, 21.93648553, -23.01126763],
      "xMatrix": [1.805342986, 3.378304841, -0.4404978477, -0.4039291866]
    },
    "resultMessage": "The method was successfully executed! See the solution down below.",
    "hasInfiniteSolutions": false,
    "solutionFailed": false
  },
  "getIterativeMethodsResultSvcResponse": {
    "result": {
        "error": [ null, 0.8350920074559348, 0.2594499366574606, 0.0686475471749066, 0.04982186070797545, 0.030056180634689046,
          0.021118878729821176, 0.014301899613178792, 0.009860558415361749, 0.006782537554248216, 0.0046801193533116394, 0.0032313726828859667, 0.0022331846686214282,
          0.00154408231081789, 0.0010680323121079957, 0.0007389358812182153, 0.0005113364311416928, 0.0003538829041785253, 0.0002449341260150948,
          0.0001695369798933832, 0.0001173538164602625, 8.123481359255903e-05, 5.623356326449298e-05, 3.892735215886582e-05, 2.6947480779249574e-05
        ],
        "n": 26,
        "x": [
          [ 1.0, -1.2400000000000002, 10.382144000000002, 7.286168473599998, 8.086559850659842, 7.951466814140318,
            8.015427216567847, 8.023910717347563, 8.03790957653742, 8.04575620394609, 8.051606708092004, 8.05556181811908,
            8.05832135988315, 8.060226801916242, 8.061546983125918, 8.062460646472902, 8.063093200862866, 8.063531083184879,
            8.063834216759604, 8.064044064871908, 8.064189335538535, 8.064289901310087, 8.06435951948724, 8.064407713716685,
            8.06444107689797, 8.064464173062392
          ],
          [
            1.0,
            21.648,
            14.348531199999998,
            18.64878972928,
            19.276256904773632,
            20.25537029399202,
            20.808963016047606,
            21.220415278242072,
            21.498843566956857,
            21.69304356058147,
            21.827151490636698,
            21.920064602008633,
            21.984368109064143,
            22.028887036364434,
            22.059705058804287,
            22.0810394974157,
            22.095808538651795,
            22.106032640020494,
            22.113110425792062,
            22.118010130073152,
            22.121402024005683,
            22.123750113671512,
            22.125375614086288,
            22.126500891221212,
            22.127279881258243,
            22.127819148838903
          ],
          [
            1.0,
            -10.380800000000002,
            -3.9546035199999987,
            -4.045236338688001,
            -3.011984655168306,
            -2.5487819992965357,
            -2.1707439768724184,
            -1.9220719667300918,
            -1.7469673900258564,
            -1.6264198498264943,
            -1.5428166656186157,
            -1.4849756742011904,
            -1.4449265313314303,
            -1.41720368980427,
            -1.39801173131322,
            -1.3847259008234634,
            -1.3755285638411086,
            -1.3691615735751457,
            -1.3647539276386007,
            -1.3617026686265514,
            -1.3595903885845022,
            -1.358128130938208,
            -1.3571158610658862,
            -1.3564151020080077,
            -1.3559299910003346,
            -1.3555941656021142
          ]
        ]
      },
      "resultMessage": "The method was successfully executed",
      "solutionFailed": null
  },
  "getInterpolationNewtonLagrangeResultSvcResponse": {
    "result": {
      "functionOutput": 18.78,
      "polynomial": [
        "0.9 +",
        "32.1(x-2.0) +",
        "(-28.439999999999998)(x-2.0)(x-2.5) +",
        "17.253333333333327(x-2.0)(x-2.5)(x-3.0) +",
        "(-7.83999999999999)(x-2.0)(x-2.5)(x-3.0)(x-3.5)"
      ],
      "terms": [
        "0.9 = 0.9",
        "(0.9 - 16.95) / -0.5 = 32.1",
        "(32.1 - 3.6600000000000037) / -1.0 = -28.439999999999998",
        "(-28.439999999999998 - -2.5600000000000094) / -1.5 = 17.253333333333327",
        "(17.253333333333327 - 1.5733333333333472) / -2.0 = -7.83999999999999"
      ]
    },
    "resultMessage": "The method was successfully executed",
    "solutionFailed": false
  },
  "getSplinesResultSvcResponse": {
    "result": {
      "aMatrix": [
        [ -1.0, 1.0, -1.0, 1, 0, 0, 0, 0, 0, 0, 0, 0 ],
        [ 1.0, 1.0, 1.0, 1, 0, 0, 0, 0, 0, 0, 0, 0 ],
        [ 0, 0, 0, 0, 1.0, 1.0, 1.0, 1, 0, 0, 0, 0 ],
        [ 0, 0, 0, 0, 8.0, 4.0, 2.0, 1, 0, 0, 0, 0 ],
        [ 0, 0, 0, 0, 0, 0, 0, 0, 8.0, 4.0, 2.0, 1 ],
        [ 0, 0, 0, 0, 0, 0, 0, 0, 64.0, 16.0, 4.0, 1 ],
        [ 3.0, 2.0, 1, 0, -3.0, -2.0, -1, 0, 0, 0, 0, 0 ],
        [ 6.0, 2, 0, 0, -6.0, -2, 0, 0, 0, 0, 0, 0 ],
        [ 0, 0, 0, 0, 12.0, 4.0, 1, 0, -12.0, -4.0, -1, 0 ],
        [ 0, 0, 0, 0, 12.0, 2, 0, 0, -12.0, -2, 0, 0 ],
        [ -6.0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
        [ 0, 0, 0, 0, 0, 0, 0, 0, 24.0, 2, 0, 0 ]
      ],
      "bMatrix": [ -2.1, 3.5, 3.5, 7.8, 7.8, -7.2, 0, 0, 0, 0, 0, 0 ],
      "xMatrix": [
        1.032857142857143,
        -2.6600000000000006,
        0.2971428571428573,
        0.8914285714285719,
        -12.394285714285717,
        9.762857142857145,
        2.502857142857143,
        2.7657142857142842,
        -0.19142857142857306,
        -6.368571428571431,
        37.945714285714295,
        -26.777142857142863
      ]
    },
    "resultMessage": "The method was successfully executed",
    "solutionFailed": null
  },
  "getIntegrationSimpleResultSvcResponse": {
    "result": {
      "equation": "(3*0.8/8)((291617.43868723727) + 3(7653863.370038709) + 3(198663537.08309358) + (5114223671.123473))",
      "functionOutput": 1720040246.9764674
    },
    "resultMessage": "The method was successfully executed",
    "solutionFailed": false
  },
  "getIntegrationGeneralResultSvcResponse": {
    "result": {
      "equation": [
        "(3*0.2/8)((291617.43868723727 + (5114223671.123473) + 2((3385544.0514798565) +",
        "(39040221.251111716) +",
        "(447796456.9851135)) +",
        "3((660883.5912567383) +",
        "(1496417.0518357889) +",
        "(7653863.370038709) +",
        "(17291572.64748346) +",
        "(88091526.60534802) +",
        "(198663537.08309358) +",
        "(1008872661.912333) +",
        "(2271949372.6173377))"
      ],
      "functionOutput": 1265924942.8330314
    },
    "resultMessage": "The method was successfully executed",
    "solutionFailed": false
  },
  "getBestLambdaResultSvc": {
    "lambda": 0.82,
    "resultMessage": "We recommend to use lambda = 0.82 in jacobi"
  }
}
